# Default values for adguardhome.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Replica Configuration
## @param replicaCount Number of replicas to deploy
##
replicaCount: 1

## @section Image Configuration
## @param image.repository AdGuard Home image repository
## @param image.pullPolicy Image pull policy
## @param image.tag Image tag (defaults to appVersion)
##
image:
  repository: adguard/adguardhome
  pullPolicy: IfNotPresent
  tag: ""

## @param imagePullSecrets Array of image pull secrets
##
imagePullSecrets: []

## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""

## @param fullnameOverride String to fully override common.names.fullname template
##
fullnameOverride: ""

## @section Service Account Configuration
## @param serviceAccount.create Whether to create a service account
## @param serviceAccount.automount Whether to automount API credentials
## @param serviceAccount.annotations Annotations for service account
## @param serviceAccount.name Name of the service account
##
serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

## @param podAnnotations Annotations to add to the pod
##
podAnnotations: {}

## @param podLabels Labels to add to the pod
##
podLabels: {}

## @param podSecurityContext Pod security context
##
podSecurityContext: {}
  # fsGroup: 2000

## @param securityContext Container security context
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## @section Service Configuration
## @param service.type Kubernetes service type
## @param service.externalIPs External IP addresses for service
## @param service.externalTrafficPolicy External traffic policy
## @param service.ports Service ports configuration
##
service:
  type: ClusterIP
  externalIPs: []
  #externalTrafficPolicy: Local
  ports:
    ## @param service.ports.http-setup HTTP setup port
    - name: http-setup
      containerPort: 3000
      protocol: TCP    ## @param service.ports.dns-udp DNS UDP port
    - name: dns-udp
      containerPort: 53
      protocol: UDP
    ## @param service.ports.dns-tcp DNS TCP port
    - name: dns-tcp
      containerPort: 53
      protocol: TCP
    ## @param service.ports.http HTTP port
    - name: http
      containerPort: 80 
      protocol: TCP
    ## @param service.ports.https-doh HTTPS/DNS-over-HTTPS port
    # - name: https-doh
    #   containerPort: 443
    #   protocol: TCP
    ## @param service.ports.doh-udp DNS-over-HTTPS UDP port
    # - name: doh-udp
    #   containerPort: 443
    #   protocol: UDP
    
    ## @param service.ports.dot DNS-over-TLS port
    # - name: dot
    #   containerPort: 853
    #   protocol: TCP
    
    ## @param service.ports.doq-1 DNS-over-QUIC port 1
    # - name: doq-1
    #   containerPort: 784 
    #   protocol: UDP
    ## @param service.ports.doq-2 DNS-over-QUIC port 2
    # - name: doq-2
    #   containerPort: 853 
    #   protocol: UDP
    ## @param service.ports.doq-3 DNS-over-QUIC port 3
    # - name: doq-3
    #   containerPort: 8853
    #   protocol: UDP
    
    ## @param service.ports.dnscrypt-tcp DNSCrypt TCP port
    # - name: dnscrypt-tcp
    #   containerPort: 5443
    #   protocol: TCP
    ## @param service.ports.dnscrypt-udp DNSCrypt UDP port
    # - name: dnscrypt-udp
    #   containerPort: 5443
    #   protocol: UDP

## @section Ingress Configuration
## @param ingress.enabled Whether to enable ingress
## @param ingress.className Ingress class name
## @param ingress.annotations Ingress annotations
## @param ingress.hosts Ingress hosts configuration
## @param ingress.tls Ingress TLS configuration
##
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
          backend:
            service:
              port:
                name: http
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## @section Resources Configuration
## @param resources Resource requests/limits
##
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## @section Probes Configuration
## @param livenessProbe Liveness probe configuration
## @param readinessProbe Readiness probe configuration
##
livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 300
  timeoutSeconds: 1
  periodSeconds: 15

readinessProbe:
  httpGet:
    path: /
    port: http

## @section Autoscaling Configuration
## @param autoscaling.enabled Whether to enable autoscaling
## @param autoscaling.minReplicas Minimum number of replicas
## @param autoscaling.maxReplicas Maximum number of replicas
## @param autoscaling.targetCPUUtilizationPercentage Target CPU utilization percentage
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

## @section Persistence Configuration
## @param persistence.enabled Whether to enable persistence
## @param persistence.storageClass Storage class for PV
## @param persistence.accessMode Access mode for PV
## @param persistence.size Size of storage
## @param persistence.annotations Annotations for PVC
##
persistence:
  enabled: true
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

## @param volumes Additional volumes
##
volumes: []
# - name: conf
#   persistentVolumeClaim:
#     claimName: adguardhome-conf
# - name: work
#   persistentVolumeClaim:
#     claimName: adguardhome-work

## @param volumeMounts Additional volume mounts
##
volumeMounts: []
# - mountPath: /opt/adguardhome/conf
#   name: conf
# - mountPath: /opt/adguardhome/work
#   name: work

## @param nodeSelector Node selector
##
nodeSelector: {}

## @param tolerations Tolerations
##
tolerations: []

## @param affinity Affinity
##
affinity: {}
