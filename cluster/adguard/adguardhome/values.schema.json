{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "AdGuard Home Helm Chart Values",
    "description": "Configuration values for AdGuard Home Helm Chart",
    "type": "object",
    "properties": {
      "replicaCount": {
        "description": "Number of replicas to deploy",
        "type": "integer",
        "minimum": 1,
        "default": 1
      },
      "image": {
        "type": "object",
        "properties": {
          "repository": {
            "description": "AdGuard Home image repository",
            "type": "string",
            "default": "adguard/adguardhome"
          },
          "pullPolicy": {
            "description": "Image pull policy",
            "type": "string",
            "enum": ["Always", "IfNotPresent", "Never"],
            "default": "IfNotPresent"
          },
          "tag": {
            "description": "Image tag (defaults to appVersion)",
            "type": "string",
            "default": ""
          }
        },
        "required": ["repository", "pullPolicy"]
      },
      "imagePullSecrets": {
        "description": "Array of image pull secrets",
        "type": "array",
        "items": {
          "type": "object"
        },
        "default": []
      },
      "nameOverride": {
        "description": "String to partially override common.names.fullname template (will maintain the release name)",
        "type": "string",
        "default": ""
      },
      "fullnameOverride": {
        "description": "String to fully override common.names.fullname template",
        "type": "string",
        "default": ""
      },
      "serviceAccount": {
        "type": "object",
        "properties": {
          "create": {
            "description": "Whether to create a service account",
            "type": "boolean",
            "default": true
          },
          "automount": {
            "description": "Whether to automount API credentials",
            "type": "boolean",
            "default": true
          },
          "annotations": {
            "description": "Annotations for service account",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          },
          "name": {
            "description": "Name of the service account",
            "type": "string",
            "default": ""
          }
        },
        "default": {}
      },
      "podAnnotations": {
        "description": "Annotations to add to the pod",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "default": {}
      },
      "podLabels": {
        "description": "Labels to add to the pod",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "default": {}
      },
      "podSecurityContext": {
        "description": "Pod security context",
        "type": "object",
        "properties": {
          "fsGroup": {
            "type": "integer"
          }
        },
        "default": {}
      },
      "securityContext": {
        "description": "Container security context",
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "object",
            "properties": {
              "drop": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "readOnlyRootFilesystem": {
            "type": "boolean"
          },
          "runAsNonRoot": {
            "type": "boolean"
          },
          "runAsUser": {
            "type": "integer"
          }
        },
        "default": {}
      },
      "service": {
        "type": "object",
        "properties": {
          "type": {
            "description": "Kubernetes service type",
            "type": "string",
            "enum": ["ClusterIP", "NodePort", "LoadBalancer", "ExternalName"],
            "default": "ClusterIP"
          },
          "externalIPs": {
            "description": "External IP addresses for service",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "externalTrafficPolicy": {
            "description": "External traffic policy",
            "type": "string",
            "enum": ["Cluster", "Local"]
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "containerPort": {
                  "type": "integer"
                },
                "protocol": {
                  "type": "string",
                  "enum": ["TCP", "UDP"]
                }
              },
              "required": ["name", "containerPort", "protocol"]
            },
            "default": [
              {
                "name": "http-setup",
                "containerPort": 3000,
                "protocol": "TCP"
              },
              {
                "name": "dns-udp",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "http",
                "containerPort": 80,
                "protocol": "TCP"
              }
            ]
          }
        },
        "default": {}
      },
      "ingress": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether to enable ingress",
            "type": "boolean",
            "default": false
          },
          "className": {
            "description": "Ingress class name",
            "type": "string",
            "default": ""
          },
          "annotations": {
            "description": "Ingress annotations",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          },
          "hosts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string"
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "pathType": {
                        "type": "string"
                      },
                      "backend": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "default": [
              {
                "host": "chart-example.local",
                "paths": [
                  {
                    "path": "/",
                    "pathType": "ImplementationSpecific",
                    "backend": {
                      "service": {
                        "port": {
                          "name": "http"
                        }
                      }
                    }
                  }
                ]
              }
            ]
          },
          "tls": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "secretName": {
                  "type": "string"
                },
                "hosts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "default": []
          }
        },
        "default": {}
      },
      "resources": {
        "description": "Resource requests/limits",
        "type": "object",
        "properties": {
          "limits": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              }
            }
          },
          "requests": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string"
              },
              "memory": {
                "type": "string"
              }
            }
          }
        },
        "default": {}
      },
      "livenessProbe": {
        "description": "Liveness probe configuration",
        "type": "object",
        "properties": {
          "httpGet": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          },
          "initialDelaySeconds": {
            "type": "integer"
          },
          "timeoutSeconds": {
            "type": "integer"
          },
          "periodSeconds": {
            "type": "integer"
          }
        },
        "default": {
          "httpGet": {
            "path": "/",
            "port": "http"
          },
          "initialDelaySeconds": 300,
          "timeoutSeconds": 1,
          "periodSeconds": 15
        }
      },
      "readinessProbe": {
        "description": "Readiness probe configuration",
        "type": "object",
        "properties": {
          "httpGet": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "port": {
                "type": "string"
              }
            }
          }
        },
        "default": {
          "httpGet": {
            "path": "/",
            "port": "http"
          }
        }
      },
      "autoscaling": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether to enable autoscaling",
            "type": "boolean",
            "default": false
          },
          "minReplicas": {
            "description": "Minimum number of replicas",
            "type": "integer",
            "minimum": 1,
            "default": 1
          },
          "maxReplicas": {
            "description": "Maximum number of replicas",
            "type": "integer",
            "minimum": 1,
            "default": 100
          },
          "targetCPUUtilizationPercentage": {
            "description": "Target CPU utilization percentage",
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 80
          },
          "targetMemoryUtilizationPercentage": {
            "description": "Target memory utilization percentage",
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          }
        },
        "default": {}
      },
      "persistence": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether to enable persistence",
            "type": "boolean",
            "default": true
          },
          "storageClass": {
            "description": "Storage class for PV",
            "type": "string"
          },
          "accessMode": {
            "description": "Access mode for PV",
            "type": "string",
            "default": "ReadWriteOnce"
          },
          "size": {
            "description": "Size of storage",
            "type": "string",
            "default": "8Gi"
          },
          "annotations": {
            "description": "Annotations for PVC",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          }
        },
        "default": {}
      },
      "volumes": {
        "description": "Additional volumes",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "persistentVolumeClaim": {
              "type": "object",
              "properties": {
                "claimName": {
                  "type": "string"
                }
              }
            }
          }
        },
        "default": []
      },
      "volumeMounts": {
        "description": "Additional volume mounts",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "mountPath": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "default": []
      },
      "nodeSelector": {
        "description": "Node selector",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        },
        "default": {}
      },
      "tolerations": {
        "description": "Tolerations",
        "type": "array",
        "items": {
          "type": "object"
        },
        "default": []
      },
      "affinity": {
        "description": "Affinity",
        "type": "object",
        "default": {}
      }
    }
  }